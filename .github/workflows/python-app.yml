name: "Test setup-ros"
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    # Run the CI automatically twice per day to look for flakyness.
    - cron: "0 */12 * * *"

defaults:
  run:
    shell: bash

env:
  CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

jobs:
  test_environment_linux:
    name: "Check development tools"
    runs-on: ubuntu-latest
    container:
      image: ${{ matrix.docker_image }}
    strategy:
      fail-fast: false
      matrix:
        docker_image:
          - ubuntu:22.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4.0.2
        with:
          node-version: "20.x"
      - run: .github/workflows/build-and-test.sh
      - uses: ./ # Uses an action in the root directory
      - run: .github/workflows/check-environment.sh

  # Validates that once setup-ros finished, the ROS distribution
  # setup.sh / local_setup.bat can be sourced, and the ROS distribution is
  # functional.


  test_ros_binary_install_linux:
    name: "Check ROS distribution"
    strategy:
      fail-fast: false
      matrix:
        # Define the Docker image(s) associated with each ROS distribution.
        # The include syntax allows additional variables to be defined, like
        # docker_image in this case. See documentation:
        # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#example-including-configurations-in-a-matrix-build
        #
        # Platforms are defined in REP 3: https://ros.org/reps/rep-0003.html
        include:

          # Humble Hawksbill (May 2022 - May 2027)
          - docker_image: ubuntu:jammy
            ros_distribution: humble
            ros_version: 2


  test_repo_with_root_setup_cfg:
    name: "Test with setup.cfg file in root directory (Linux only)"
    runs-on: ubuntu-latest
    container:
      image: ubuntu:24.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4.0.2
        with:
          node-version: "20.x"
      - run: .github/workflows/build-and-test.sh
      - run: cp .github/workflows/test_setup.cfg setup.cfg
      - uses: ./ # Uses an action in the root directory
      - run: colcon --help

  test_on_setup_ros_docker_container:
    name: "Test on a setup-ros-docker container"
    runs-on: ubuntu-latest
    container:
      image: rostooling/setup-ros-docker:ubuntu-noble-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4.0.2
        with:
          node-version: "20.x"
      - run: .github/workflows/build-and-test.sh
      - uses: ./

  test_install_connext:
    name: "Test with RTI Connext DDS"
    runs-on: ubuntu-latest
    container:
      image: ${{ matrix.docker_image }}
    strategy:
      fail-fast: false
      matrix:
        docker_image:
          - ubuntu:24.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4.0.2
        with:
          node-version: "20.x"
      - run: .github/workflows/build-and-test.sh
      - uses: ./
        with:
          install-connext: true
      - run: .github/workflows/check-environment.sh
      - run: dpkg -l | grep rti-connext-dds-